// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrabalhoBancoDeDados.Contexts;

#nullable disable

namespace TrabalhoBancoDeDados.api.Migrations
{
    [DbContext(typeof(ClienteContext))]
    [Migration("20230804185824_TerceiraMigracao")]
    partial class TerceiraMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Itajai",
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Balneário Camboriu",
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Penha",
                            Uf = "SC"
                        });
                });

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CidadeId = 1,
                            Endereco = "Rua Tal",
                            Nome = "Joao",
                            Telefone = "123456789123456789"
                        },
                        new
                        {
                            Id = 2,
                            CidadeId = 1,
                            Endereco = "Rua Tal",
                            Nome = "Jorge",
                            Telefone = "123456789123456789"
                        },
                        new
                        {
                            Id = 3,
                            CidadeId = 2,
                            Endereco = "Rua Tal",
                            Nome = "Aaa",
                            Telefone = "123456789123456789"
                        },
                        new
                        {
                            Id = 4,
                            CidadeId = 3,
                            Endereco = "Rua Tal",
                            Nome = "Jorge",
                            Telefone = "123456789123456789"
                        });
                });

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cliente", b =>
                {
                    b.HasOne("TrabalhoBancoDeDados.Entities.Cidade", "Cidade")
                        .WithMany("Clientes")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cidade", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
