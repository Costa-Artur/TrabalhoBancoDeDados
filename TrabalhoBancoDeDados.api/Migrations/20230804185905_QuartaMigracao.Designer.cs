// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrabalhoBancoDeDados.Contexts;

#nullable disable

namespace TrabalhoBancoDeDados.api.Migrations
{
    [DbContext(typeof(ClienteContext))]
    [Migration("20230804185905_QuartaMigracao")]
    partial class QuartaMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Itajai",
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Balneário Camboriu",
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Penha",
                            Uf = "SC"
                        });
                });

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CidadeId")
                        .HasColumnType("integer");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 20,
                            CidadeId = 1,
                            Endereco = "Rua Elizabeth Montibeller dos Santos, Cordeiros",
                            Nome = "Vinícius Carmo",
                            Telefone = "913618797913618797"
                        },
                        new
                        {
                            Id = 5,
                            CidadeId = 1,
                            Endereco = "Rua Osni José Jacinto, São Vicente",
                            Nome = "Miguel Campos",
                            Telefone = "966924839966924839"
                        },
                        new
                        {
                            Id = 6,
                            CidadeId = 1,
                            Endereco = "Rua Hercílio Luz, Centro",
                            Nome = "Leonardo Marques",
                            Telefone = "922898441922898441"
                        },
                        new
                        {
                            Id = 7,
                            CidadeId = 1,
                            Endereco = "Rua Fábio Cesário Pereira, São Judas",
                            Nome = "Mirela Rodrigues",
                            Telefone = "975617754975617754"
                        },
                        new
                        {
                            Id = 8,
                            CidadeId = 1,
                            Endereco = "Avenida Osvaldo Reis, Fazendinha",
                            Nome = "Elisandra Vasconcelos",
                            Telefone = "908015364908015364"
                        },
                        new
                        {
                            Id = 9,
                            CidadeId = 1,
                            Endereco = "Rua Cilina Vechi Merizio, Limoeiro",
                            Nome = "Marina Medina",
                            Telefone = "989277760989277760"
                        },
                        new
                        {
                            Id = 10,
                            CidadeId = 1,
                            Endereco = "Rua Nelson Augusto da Silva Schiefler, Barra do Rio",
                            Nome = "Tereza Ramos",
                            Telefone = "917230087917230087"
                        },
                        new
                        {
                            Id = 11,
                            CidadeId = 2,
                            Endereco = "Rua Januário Pedro Ferreira, Barra",
                            Nome = "Suzana Bosco",
                            Telefone = "967190866967190866"
                        },
                        new
                        {
                            Id = 12,
                            CidadeId = 2,
                            Endereco = "Avenida Atlântica 640, Centro",
                            Nome = "Letícia Figueiredo",
                            Telefone = "927389821927389821"
                        },
                        new
                        {
                            Id = 13,
                            CidadeId = 2,
                            Endereco = "Rua Jordânia, Nações",
                            Nome = "Fabiano Rezende",
                            Telefone = "917230087917230087"
                        },
                        new
                        {
                            Id = 14,
                            CidadeId = 3,
                            Endereco = "Rua das Paineiras, Progresso",
                            Nome = "Renan Cardoso",
                            Telefone = "987380006987380006"
                        },
                        new
                        {
                            Id = 15,
                            CidadeId = 3,
                            Endereco = "Rua Celso Boos, Progresso",
                            Nome = "Luiz Matos",
                            Telefone = "941919104941919104"
                        },
                        new
                        {
                            Id = 16,
                            CidadeId = 3,
                            Endereco = "Rua Alfredo Boehringer, Badenfurt",
                            Nome = "Clara Corrêa",
                            Telefone = "970872835970872835"
                        },
                        new
                        {
                            Id = 17,
                            CidadeId = 1,
                            Endereco = "Rua Alfredo Boehringer, Badenfurt",
                            Nome = "Clara Almeida",
                            Telefone = "970872835970872835"
                        },
                        new
                        {
                            Id = 18,
                            CidadeId = 1,
                            Endereco = "Rua Alfredo Boehringer, Badenfurt",
                            Nome = "Clara Tres",
                            Telefone = "970872835970872835"
                        },
                        new
                        {
                            Id = 19,
                            CidadeId = 1,
                            Endereco = "Rua Alfredo Boehringer, Badenfurt",
                            Nome = "Clara Quatro",
                            Telefone = "970872835970872835"
                        });
                });

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cliente", b =>
                {
                    b.HasOne("TrabalhoBancoDeDados.Entities.Cidade", "Cidade")
                        .WithMany("Clientes")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("TrabalhoBancoDeDados.Entities.Cidade", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
